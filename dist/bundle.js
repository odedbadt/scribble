/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ts/circle.ts":
/*!**************************!*\
  !*** ./src/ts/circle.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircleTool: () => (/* binding */ CircleTool)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nclass CircleTool extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor) {\n        super(context, editor, false);\n    }\n    editing_action(at) {\n        if (this.from == null) {\n            return false;\n        }\n        const r = Math.sqrt((at.x - this.from.x) * (at.x - this.from.x) +\n            (at.y - this.from.y) * (at.y - this.from.y));\n        this.context.ellipse(this.from.x, this.from.y, r, r, 0, 0, Math.PI * 2);\n        if (this.app.settings.filled) {\n            this.context.fill();\n        }\n        else {\n            this.context.stroke();\n        }\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/circle.ts?");

/***/ }),

/***/ "./src/ts/clearall.ts":
/*!****************************!*\
  !*** ./src/ts/clearall.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClearAllTool: () => (/* binding */ ClearAllTool)\n/* harmony export */ });\n/* harmony import */ var _on_select_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./on_select_tool */ \"./src/ts/on_select_tool.ts\");\n\nclass ClearAllTool extends _on_select_tool__WEBPACK_IMPORTED_MODULE_0__.OnSelectTool {\n    start(at, buttons) {\n        throw new Error(\"Method not implemented.\");\n    }\n    action(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stop(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor(context, editor) {\n        super(context, editor);\n        this.context = context;\n        this.editor = editor;\n        this.app = editor.app;\n    }\n    select_action() {\n        const w = this.context.canvas.clientWidth;\n        const h = this.context.canvas.clientHeight;\n        this.context.fillStyle = this.app.settings.back_color;\n        this.context.fillRect(0, 0, w, h);\n    }\n    hover() {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/clearall.ts?");

/***/ }),

/***/ "./src/ts/click_and_drag_tool.ts":
/*!***************************************!*\
  !*** ./src/ts/click_and_drag_tool.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClickAndDragTool: () => (/* binding */ ClickAndDragTool)\n/* harmony export */ });\n/* harmony import */ var _editing_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editing_tool */ \"./src/ts/editing_tool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nclass ClickAndDragTool extends _editing_tool__WEBPACK_IMPORTED_MODULE_0__.EditingTool {\n    constructor(context, editor, incremental, tmp_context) {\n        super(context, editor, tmp_context);\n        this.is_incremental = !!incremental;\n        this.start = this.start.bind(this);\n        this.action = this.action.bind(this);\n        this.stop = this.stop.bind(this);\n        this.dirty = false;\n        this.from = null;\n    }\n    select() {\n    }\n    start(at, buttons) {\n        this.context.clearRect(0, 0, this.w, this.h);\n        this.context.fillStyle = this.app.settings.fore_color;\n        this.context.strokeStyle = this.app.settings.fore_color;\n        this.context.lineWidth = this.app.settings.line_width;\n        this.context.lineCap = 'round';\n        this.dirty = this.editing_start();\n        this.from = at;\n        return false;\n    }\n    editing_start() {\n        // nop, implemenet me\n        return false;\n    }\n    action(at) {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.editor.app.staging_context, this.editor.app.art_canvas);\n        this.editor.app.tool_context.beginPath();\n        this.dirty = !!this.editing_action(at) || this.dirty;\n        if (!this.is_incremental) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true, true);\n        if (!this.is_incremental) {\n            this.context.clearRect(0, 0, this.w, this.h);\n        }\n        return true;\n    }\n    hover(at) {\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.tmp_context.clearRect(0, 0, this.w, this.h);\n        const dirty = this.hover_action(at);\n        if (dirty) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n            return true;\n        }\n        return false;\n    }\n    hover_action(at) {\n        // nop\n        return false;\n    }\n    editing_action(at) {\n        throw new Error(\"Not fully implemented tool\");\n    }\n    stop(at) {\n        this.dirty = !!this.editing_stop(at) || this.dirty;\n        if (this.dirty) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.art_context, this.app.staging_canvas);\n            this.editor.undo_redo_buffer.push(this.app.art_context.getImageData(0, 0, this.w, this.h));\n            this.from = null;\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n            this.dirty = false;\n            return true;\n        }\n        return false;\n    }\n    editing_stop(at) {\n        // nop, implemenet me\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/click_and_drag_tool.ts?");

/***/ }),

/***/ "./src/ts/click_tool.ts":
/*!******************************!*\
  !*** ./src/ts/click_tool.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClickTool: () => (/* binding */ ClickTool)\n/* harmony export */ });\n/* harmony import */ var _editing_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editing_tool */ \"./src/ts/editing_tool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nclass ClickTool extends _editing_tool__WEBPACK_IMPORTED_MODULE_0__.EditingTool {\n    constructor(context, editor) {\n        super(context, editor);\n        this.start = this.start.bind(this);\n    }\n    select() {\n    }\n    start(at, buttons) {\n        this.context.clearRect(0, 0, this.w, this.h);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.editor.app.staging_context, this.editor.app.art_canvas);\n        this.editing_start(at, buttons);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.art_context, this.app.staging_canvas);\n        this.editor.undo_redo_buffer.push(this.app.art_context.getImageData(0, 0, this.w, this.h));\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/click_tool.ts?");

/***/ }),

/***/ "./src/ts/cursor_size.ts":
/*!*******************************!*\
  !*** ./src/ts/cursor_size.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CursorSize: () => (/* binding */ CursorSize)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nclass CursorSize extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, false, tmp_context);\n    }\n    editing_start() {\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.tmp_context.fillStyle = this.app.settings.fore_color;\n        this.tmp_context.strokeStyle = this.app.settings.fore_color;\n        this.tmp_context.lineWidth = this.app.settings.line_width;\n        this.tmp_context.lineCap = 'round';\n        return false;\n    }\n    start(at, buttons) {\n        this.app.settings.line_width = 1;\n        super.start(at, buttons);\n        return false;\n    }\n    editing_action(at) {\n        if (this.from == null) {\n            return false;\n        }\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.app.tool_tmp_context.clearRect(0, 0, this.w, this.h);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        const r = Math.sqrt((at.x - this.from.x) * (at.x - this.from.x) +\n            (at.y - this.from.y) * (at.y - this.from.y));\n        this.tmp_context.beginPath();\n        this.tmp_context.ellipse(this.from.x, this.from.y, r, r, 0, 0, Math.PI * 2);\n        this.tmp_context.fill();\n        this.app.settings.line_width = 2 * r;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n        return false;\n    }\n    hover(at) {\n        return false;\n    }\n    editing_stop(at) {\n        if (this.editor.previous_tool_name) {\n            this.app.select_tool(this.editor.previous_tool_name);\n        }\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/cursor_size.ts?");

/***/ }),

/***/ "./src/ts/dropper.ts":
/*!***************************!*\
  !*** ./src/ts/dropper.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dropper: () => (/* binding */ Dropper)\n/* harmony export */ });\n/* harmony import */ var _click_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_tool */ \"./src/ts/click_tool.ts\");\n\nclass Dropper extends _click_tool__WEBPACK_IMPORTED_MODULE_0__.ClickTool {\n    action(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stop(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor(context, editor) {\n        super(context, editor);\n    }\n    editing_start(at, buttons) {\n        const color = this.app.art_context.getImageData(at.x, at.y, 1, 1).data;\n        const sampled_color = `rgba(${color[0]},${color[1]},${color[2]},255)`;\n        this.app.select_color(sampled_color, (buttons & 1) > 0, true);\n        if (this.editor.previous_tool_name) {\n            this.app.select_tool(this.editor.previous_tool_name);\n        }\n        return false;\n    }\n    hover(at) {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/dropper.ts?");

/***/ }),

/***/ "./src/ts/editing_tool.ts":
/*!********************************!*\
  !*** ./src/ts/editing_tool.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditingTool: () => (/* binding */ EditingTool),\n/* harmony export */   NopTool: () => (/* binding */ NopTool)\n/* harmony export */ });\nclass EditingTool {\n    constructor(context, editor, tmp_context) {\n        this.context = context;\n        this.editor = editor;\n        this.w = context.canvas.clientWidth;\n        this.h = context.canvas.clientHeight;\n        this.app = editor.app;\n        this.tmp_context = tmp_context;\n    }\n    select() {\n        this.context.clearRect(0, 0, this.w, this.h);\n    }\n}\nclass NopTool extends EditingTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, tmp_context);\n    }\n    select() {\n        super.select();\n    }\n    start(at, buttons) {\n        return false;\n    }\n    action(at) {\n        return false;\n    }\n    stop(at) {\n        return false;\n    }\n    hover(at) {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/editing_tool.ts?");

/***/ }),

/***/ "./src/ts/editor.ts":
/*!**************************!*\
  !*** ./src/ts/editor.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Editor: () => (/* binding */ Editor)\n/* harmony export */ });\n/* harmony import */ var _undo_redo_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./undo_redo_buffer */ \"./src/ts/undo_redo_buffer.ts\");\n/* harmony import */ var _editing_tool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editing_tool */ \"./src/ts/editing_tool.ts\");\n/* harmony import */ var _scribble__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scribble */ \"./src/ts/scribble.ts\");\n/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle */ \"./src/ts/circle.ts\");\n/* harmony import */ var _clearall__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clearall */ \"./src/ts/clearall.ts\");\n/* harmony import */ var _dropper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dropper */ \"./src/ts/dropper.ts\");\n/* harmony import */ var _eraser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./eraser */ \"./src/ts/eraser.ts\");\n/* harmony import */ var _floodfill__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./floodfill */ \"./src/ts/floodfill.ts\");\n/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./line */ \"./src/ts/line.ts\");\n/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rect */ \"./src/ts/rect.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n/* harmony import */ var _cursor_size__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cursor_size */ \"./src/ts/cursor_size.ts\");\n/* harmony import */ var _styletogglers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./styletogglers */ \"./src/ts/styletogglers.ts\");\n/* harmony import */ var _mandala__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./mandala */ \"./src/ts/mandala.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst v = _scribble__WEBPACK_IMPORTED_MODULE_2__.ScribbleTool;\nconst tool_classes = new Map([\n    [\"scribble\", _scribble__WEBPACK_IMPORTED_MODULE_2__.ScribbleTool],\n    [\"rect\", _rect__WEBPACK_IMPORTED_MODULE_9__.RectTool],\n    [\"line\", _line__WEBPACK_IMPORTED_MODULE_8__.LineTool],\n    [\"circle\", _circle__WEBPACK_IMPORTED_MODULE_3__.CircleTool],\n    [\"dropper\", _dropper__WEBPACK_IMPORTED_MODULE_5__.Dropper],\n    [\"floodfill\", _floodfill__WEBPACK_IMPORTED_MODULE_7__.Floodfill],\n    [\"eraser\", _eraser__WEBPACK_IMPORTED_MODULE_6__.EraserTool],\n    [\"clearall\", _clearall__WEBPACK_IMPORTED_MODULE_4__.ClearAllTool],\n    [\"cursor_size\", _cursor_size__WEBPACK_IMPORTED_MODULE_11__.CursorSize],\n    [\"fillstyle\", _styletogglers__WEBPACK_IMPORTED_MODULE_12__.FillStyleToggler],\n    [\"mandala\", _mandala__WEBPACK_IMPORTED_MODULE_13__.mandala]\n]);\nclass Editor {\n    constructor(app) {\n        this.app = app;\n        this.w = this.app.art_canvas.width;\n        this.h = this.app.art_canvas.height;\n        this.undo_redo_buffer = new _undo_redo_buffer__WEBPACK_IMPORTED_MODULE_0__.UndoRedoBuffer(100);\n        this.tool = new _editing_tool__WEBPACK_IMPORTED_MODULE_1__.NopTool(app.tool_context, this, app.tool_tmp_context);\n        this._last_hover_spot = null;\n    }\n    select_tool(tool_name) {\n        this.previous_tool_name = this.current_tool_name;\n        this.current_tool_name = tool_name;\n        const tool_class = tool_classes.get(tool_name);\n        if (!tool_class) {\n            return;\n        }\n        this.tool = new tool_class(this.app.tool_context, this, this.app.tool_tmp_context);\n        this.tool.select();\n        if (this._last_hover_spot) {\n            this.tool.hover(this._last_hover_spot);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n        }\n    }\n    deselect_tool() {\n        this.tool = null;\n    }\n    pointerdown(event) {\n        event.preventDefault();\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        this.tool.start({ x: event.offsetX, y: event.offsetY }, event.buttons);\n    }\n    pointermove(event) {\n        this._last_hover_spot = { x: event.offsetX, y: event.offsetY };\n        if (event.buttons) {\n            this.tool.action({ x: event.offsetX, y: event.offsetY });\n            this.tool.hover({ x: event.offsetX, y: event.offsetY });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n        }\n        else {\n            this.tool.hover({ x: event.offsetX, y: event.offsetY });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n        }\n        // Appply action\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.tool_tmp_canvas, true);\n    }\n    undo() {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        this.app.tool_context.clearRect(0, 0, this.w, this.h);\n        const undone_image_data = this.undo_redo_buffer.undo();\n        this.app.clear_art_canvas();\n        if (undone_image_data) {\n            this.app.art_context.putImageData(undone_image_data, 0, 0);\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n    }\n    redo() {\n        const redone_image_data = this.undo_redo_buffer.redo();\n        if (redone_image_data) {\n            this.app.staging_context.clearRect(0, 0, this.w, this.h);\n            this.app.tool_context.clearRect(0, 0, this.w, this.h);\n            this.app.clear_art_canvas();\n            this.app.art_context.putImageData(redone_image_data, 0, 0);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.art_canvas);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        }\n    }\n    keydown(event) {\n        if (event.code == 'KeyU') {\n            this.undo();\n        }\n        if (event.code == 'KeyR') {\n            this.redo();\n        }\n    }\n    pointerup(event) {\n        this.tool.hover({ x: event.offsetX, y: event.offsetY });\n        this.tool.stop();\n    }\n    pointerin(event) {\n        if (!!event.buttons) {\n        }\n        //this.pointerup(event);\n    }\n    pointerleave(event) {\n        this.app.tool_tmp_context.clearRect(0, 0, this.w, this.h);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_10__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        //override_canvas_context(this.app.staging_context, this.app.tool_canvas, true)\n        this._last_hover_spot = null;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/editor.ts?");

/***/ }),

/***/ "./src/ts/eraser.ts":
/*!**************************!*\
  !*** ./src/ts/eraser.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EraserTool: () => (/* binding */ EraserTool)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nclass EraserTool extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, true, tmp_context);\n    }\n    hover_action(at) {\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.tmp_context.fillStyle = this.app.settings.back_color;\n        this.tmp_context.strokeStyle = this.app.settings.fore_color;\n        this.tmp_context.lineWidth = 1;\n        this.tmp_context.beginPath();\n        const r = this.app.settings.line_width;\n        this.tmp_context.ellipse(at.x, at.y, r, r, 0, 0, Math.PI * 2);\n        this.tmp_context.fill();\n        this.tmp_context.stroke();\n        return true;\n    }\n    editing_action(to) {\n        if (this._recorded_to) {\n            this.context.strokeStyle = this.app.settings.back_color;\n            this.context.lineWidth = this.app.settings.line_width * 2;\n            this.context.moveTo(this._recorded_to.x, this._recorded_to.y);\n            this.context.lineTo(to.x, to.y);\n        }\n        this._recorded_to = to;\n        this.context.stroke();\n        return true;\n    }\n    editing_start() {\n        return false;\n    }\n    editing_stop() {\n        this._recorded_to = null;\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/eraser.ts?");

/***/ }),

/***/ "./src/ts/floodfill.ts":
/*!*****************************!*\
  !*** ./src/ts/floodfill.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Floodfill: () => (/* binding */ Floodfill)\n/* harmony export */ });\n/* harmony import */ var _click_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_tool */ \"./src/ts/click_tool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nfunction _equal_colors(c1, c2) {\n    return c1[0] == c2[0] &&\n        c1[1] == c2[1] &&\n        c1[2] == c2[2];\n}\nfunction _floodfill(read_context, write_context, replaced_color, tool_color, x, y, w, h) {\n    const context_image_data = read_context.getImageData(0, 0, w, h);\n    const context_data = context_image_data.data;\n    let safety = w * h * 4;\n    let stack = [{ x: Math.floor(x), y: Math.floor(y) }];\n    while (stack.length > 0 && safety-- > 0) {\n        const dot = stack.pop();\n        if (!dot) {\n            break;\n        }\n        const x = dot.x;\n        const y = dot.y;\n        if (x < 0 ||\n            y < 0 ||\n            x > w ||\n            y >= h) {\n            continue;\n        }\n        const offset = (w * y + x) * 4;\n        const color_at_xy = context_data.slice(offset, offset + 4);\n        if (!_equal_colors(replaced_color, color_at_xy)) {\n            continue;\n        }\n        context_data[offset + 0] = tool_color[0];\n        context_data[offset + 1] = tool_color[1];\n        context_data[offset + 2] = tool_color[2];\n        context_data[offset + 3] = 255;\n        stack.push({ x: x + 1, y: y });\n        stack.push({ x: x - 1, y: y });\n        stack.push({ x: x, y: y - 1 });\n        stack.push({ x: x, y: y + 1 });\n    }\n    write_context.putImageData(context_image_data, 0, 0);\n}\nclass Floodfill extends _click_tool__WEBPACK_IMPORTED_MODULE_0__.ClickTool {\n    action(at) {\n        return false;\n        throw new Error(\"Method not implemented.\");\n    }\n    stop(at) {\n        return false;\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor(context, editor) {\n        super(context, editor);\n        this.context = context;\n        this.editor = editor;\n        this.app = editor.app;\n    }\n    editing_start(at) {\n        const replaced_color = this.app.art_context.getImageData(at.x, at.y, 1, 1).data;\n        const parsed_fore_color = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.parse_RGBA)(this.app.settings.fore_color);\n        _floodfill(this.app.art_context, this.context, replaced_color, parsed_fore_color, at.x, at.y, this.w, this.h);\n        return true;\n    }\n    hover(at) {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/floodfill.ts?");

/***/ }),

/***/ "./src/ts/line.ts":
/*!************************!*\
  !*** ./src/ts/line.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineTool: () => (/* binding */ LineTool)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nclass LineTool extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor) {\n        super(context, editor, false);\n    }\n    editing_action(at) {\n        if (!this.from) {\n            return false;\n        }\n        this.context.moveTo(this.from.x, this.from.y);\n        this.context.lineTo(at.x, at.y);\n        this.context.stroke();\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/line.ts?");

/***/ }),

/***/ "./src/ts/main_app.ts":
/*!****************************!*\
  !*** ./src/ts/main_app.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MainApp: () => (/* binding */ MainApp),\n/* harmony export */   app_ignite: () => (/* binding */ app_ignite)\n/* harmony export */ });\n/* harmony import */ var _editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editor */ \"./src/ts/editor.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nfunction click_for_a_second(id, callback) {\n    const elem = document.getElementById(id);\n    if (elem) {\n        elem.addEventListener('click', () => {\n            elem.classList.add('pressed');\n            callback();\n            window.setTimeout(() => {\n                elem.classList.remove('pressed');\n            }, 120);\n        });\n    }\n}\nclass MainApp {\n    constructor() {\n        this.art_canvas = document.getElementById('art-canvas');\n        this.art_context = this.art_canvas.getContext('2d', { willReadFrequently: true });\n        this.view_canvas = document.getElementById('view-canvas');\n        this.view_context = this.view_canvas.getContext('2d', { willReadFrequently: true });\n        this.staging_canvas = document.getElementById('staging-canvas');\n        this.staging_context = this.staging_canvas.getContext('2d', { willReadFrequently: true });\n        this.tool_canvas = document.getElementById('tool-canvas');\n        this.tool_context = this.tool_canvas.getContext('2d', { willReadFrequently: true });\n        this.tool_tmp_canvas = document.getElementById('tool-tmp-canvas');\n        this.tool_tmp_context = this.tool_tmp_canvas.getContext('2d', { willReadFrequently: true });\n        this.palette_canvas = document.getElementById('color-selector-canvas');\n        this.color_selector_element = this.palette_canvas;\n        this.color_selector_context = this.color_selector_element.getContext('2d', { willReadFrequently: true });\n        this.editor = new _editor__WEBPACK_IMPORTED_MODULE_0__.Editor(this);\n        this.settings = {\n            fore_color: 'rgba(0,0,0,255)',\n            back_color: 'rgba(255,255,255,255)',\n            line_width: 10,\n            filled: true,\n        };\n        this.art_context.imageSmoothingEnabled = false;\n        this.art_context.globalCompositeOperation = 'source-over';\n        this.staging_context.imageSmoothingEnabled = false;\n        this.staging_context.globalCompositeOperation = 'source-over';\n        this.tool_context.globalCompositeOperation = 'source-over';\n        this.tool_context.imageSmoothingEnabled = false;\n        this.color_selector_context.imageSmoothingEnabled = false;\n        this.color_stack = new Array(8);\n    }\n    select_tool(tool_name) {\n        const _this = this;\n        const button = document.getElementsByClassName(tool_name)[0];\n        const button_list = document.getElementsByClassName('button');\n        Array.from(button_list).forEach(other_button => {\n            other_button.classList.remove('pressed');\n        });\n        button.classList.add('pressed');\n        _this.editor.select_tool(tool_name);\n    }\n    init_load_save() {\n        const art_canvas = this.art_canvas;\n        const art_context = this.art_context;\n        const view_context = this.view_context;\n        const staging_context = this.staging_context;\n        click_for_a_second('save_button', () => {\n            // Generate a PNG from the canvas\n            art_canvas.toBlob(function (blob) {\n                if (!blob) {\n                    alert('invalid choice, not saving');\n                    return;\n                }\n                const link = document.createElement('a');\n                link.href = URL.createObjectURL(blob);\n                link.download = 'image.png'; // Set the file name for download\n                link.click();\n            }, 'image/png');\n        });\n        const file_input = document.getElementById('file_input');\n        file_input.addEventListener('change', (event) => {\n            const input = event.target;\n            if (input\n                && input.files\n                && input.files.length > 0\n                && input.files[0]\n                && input.files[0].type === 'image/png') {\n                const file = input.files[0];\n                const reader = new FileReader();\n                reader.onload = function (e) {\n                    if (e.target) {\n                        const img = new Image();\n                        img.onload = function () {\n                            // Clear canvas and draw the image\n                            art_context.clearRect(0, 0, art_canvas.width, art_canvas.height);\n                            art_context.drawImage(img, 0, 0, art_canvas.width, art_canvas.height);\n                            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(view_context, art_canvas);\n                            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(staging_context, art_canvas);\n                        };\n                        img.src = e.target.result;\n                    }\n                };\n                reader.readAsDataURL(file);\n            }\n            else {\n                alert(\"Please select a valid PNG file.\");\n            }\n            file_input.value = '';\n        });\n        document.getElementById('load_button').addEventListener('click', () => {\n            file_input.click();\n        });\n    }\n    init_undo_redo_buttons() {\n        const _this = this;\n        click_for_a_second('undo_button', () => {\n            _this.editor.undo();\n        });\n        click_for_a_second('redo_button', () => {\n            _this.editor.redo();\n        });\n    }\n    init_buttons() {\n        const _this = this;\n        const button_list = document.getElementsByClassName('button');\n        Array.from(button_list).forEach(button => {\n            const button_class_list = button.classList;\n            if (button_class_list[0] != 'button') {\n                button.addEventListener('click', event => {\n                    _this.select_tool(button_class_list[0]);\n                });\n            }\n        });\n        this.init_undo_redo_buttons();\n        this.init_load_save();\n    }\n    forward_events_to_editor() {\n        // canvas\n        const fore = document.getElementById('fore');\n        const canvas_area = document.getElementById('view-canvas');\n        [\"pointerdown\", \"pointerup\", \"pointerout\", \"pointerleave\", \"pointermove\", \"click\", \"keydown\"].forEach((ename) => {\n            canvas_area.addEventListener(ename, (ev) => {\n                ev.preventDefault();\n                if (this.editor[ename]) {\n                    this.editor[ename](ev);\n                }\n            });\n        });\n        this.view_canvas.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        // body\n        document.body.addEventListener(\"keydown\", (ev) => this.editor.keydown(ev));\n    }\n    select_color(color, is_fore, update_stack) {\n        if (is_fore) {\n            this.settings.fore_color = color;\n        }\n        else {\n            this.settings.back_color = color;\n        }\n        document.getElementById(is_fore ?\n            'color-selector-div-fore' :\n            'color-selector-div-back').style.backgroundColor = color;\n        if (update_stack) {\n            if (this.color_stack.indexOf(color) == -1) {\n                this.color_stack.push(color);\n                this.refresh_color_stack();\n            }\n        }\n    }\n    refresh_color_stack() {\n        const slots = document.getElementsByClassName('color_stack_item');\n        const l = this.color_stack.length;\n        const _this = this;\n        for (let j = 0; j < slots.length; ++j) {\n            const slot = slots[j];\n            if (j < l) {\n                const color = this.color_stack.at(l - 1 - j);\n                slot.style.backgroundColor = color;\n                slot.addEventListener('click', (event) => {\n                    _this.select_color(color, event.button == 0, false);\n                });\n            }\n        }\n    }\n    init_color_selector() {\n        let img = new Image();\n        img.src = \"/static/palette.png\";\n        this.palette_canvas.width = this.palette_canvas.offsetWidth;\n        this.palette_canvas.height = this.palette_canvas.offsetHeight;\n        const w = this.palette_canvas.width;\n        const h = this.palette_canvas.height;\n        img.onload = () => {\n            this.color_selector_context.drawImage(img, 0, 0, w, h);\n        };\n        const _this = this;\n        this.palette_canvas.onpointerdown = (event) => {\n            event.preventDefault();\n            const color = this.color_selector_context.getImageData(event.offsetX, event.offsetY, 1, 1).data;\n            const sampled_color = `rgba(${color[0]},${color[1]},${color[2]},255)`;\n            this.color_stack.push(sampled_color);\n            if (this.color_stack.length > 8) {\n                this.color_stack.shift();\n            }\n            this.refresh_color_stack();\n            if (event.button == 0) {\n                _this.settings.fore_color = sampled_color;\n                _this.view_context.strokeStyle = sampled_color;\n                document.getElementById('color-selector-div-fore').style.backgroundColor = sampled_color;\n            }\n            else if (event.button == 2) {\n                _this.settings.back_color = sampled_color;\n                document.getElementById('color-selector-div-back').style.backgroundColor = sampled_color;\n            }\n        };\n        this.palette_canvas.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        document.getElementById('colorswap').addEventListener('click', () => {\n            const tmp_back = _this.settings.back_color;\n            _this.settings.back_color = _this.settings.fore_color;\n            _this.settings.fore_color = tmp_back;\n            document.getElementById('color-selector-div-fore').style.backgroundColor = _this.settings.fore_color;\n            document.getElementById('color-selector-div-back').style.backgroundColor = _this.settings.back_color;\n        });\n    }\n    clear_context(context) {\n        context.fillStyle = \"rgba(255,255,255,255)\";\n        context.fillRect(0, 0, this.view_canvas.width, this.view_canvas.height);\n        context.fill();\n    }\n    clear_art_canvas() {\n        this.clear_context(this.art_context);\n    }\n    init_view_canvas_size() {\n        const resizeObserver = new ResizeObserver(entries => {\n            entries.forEach(entry => {\n                // asserting entry == view-canvas\n                const view_canvas = entry.target;\n                view_canvas.width = entry.contentRect.width;\n                view_canvas.height = entry.contentRect.height;\n            });\n        });\n        resizeObserver.observe(document.getElementById('canvas-area'));\n    }\n    init() {\n        // clear\n        this.view_context.fillStyle = \"rgba(255,255,255,0)\";\n        this.view_context.fillRect(0, 0, this.view_canvas.width, this.view_canvas.height);\n        this.staging_context.fillStyle = \"rgba(255,255,255,0)\";\n        this.staging_context.fillRect(0, 0, this.staging_canvas.width, this.staging_canvas.height);\n        this.clear_art_canvas();\n        // forward pointer\n        // bind pointer\n        const _this = this;\n        this.init_color_selector();\n        this.init_buttons();\n        this.forward_events_to_editor();\n        this.select_tool('scribble');\n        this.init_view_canvas_size();\n    }\n}\nfunction app_ignite() {\n    window.app = new MainApp();\n    window.app.init();\n}\nwindow.addEventListener('load', () => { app_ignite(); });\n\n\n//# sourceURL=webpack://scrib/./src/ts/main_app.ts?");

/***/ }),

/***/ "./src/ts/mandala.ts":
/*!***************************!*\
  !*** ./src/ts/mandala.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mandala: () => (/* binding */ mandala)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nfunction rotate(v, w, h, a, mirror) {\n    const v2 = {\n        'x': (mirror ? -1 : 1) * (v.x - (w / 2)),\n        'y': v.y - (h / 2)\n    };\n    const v3 = {\n        'x': v2.x * Math.cos(a) - v2.y * Math.sin(a),\n        'y': v2.x * Math.sin(a) + v2.y * Math.cos(a)\n    };\n    const v4 = {\n        'x': v3.x + (w / 2),\n        'y': v3.y + (h / 2)\n    };\n    return v4;\n}\nclass mandala extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, true, tmp_context);\n        this._n = 8;\n        const angles = [];\n        for (let j = 0; j < this._n; ++j) {\n            angles.push(Math.PI * 2 * (j / this._n));\n        }\n        this._angles = Array.from(angles);\n    }\n    hover_action(at) {\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.tmp_context.fillStyle = this.app.settings.fore_color;\n        const tmp_context = this.tmp_context;\n        const _this = this;\n        this._angles.forEach((angle) => {\n            const rotated = rotate(at, _this.w, _this.h, angle);\n            tmp_context.beginPath();\n            const r = this.app.settings.line_width / 2;\n            tmp_context.ellipse(rotated.x, rotated.y, r, r, 0, 0, Math.PI * 2);\n            tmp_context.fill();\n        });\n        return true;\n    }\n    editing_action(to) {\n        if (this._recorded_to) {\n            const _this = this;\n            Array.from([true, false]).forEach((mirror) => {\n                this._angles.forEach((angle) => {\n                    const rotated_recorded = rotate(this._recorded_to, _this.w, _this.h, angle, mirror);\n                    const rotated_to = rotate(to, _this.w, _this.h, angle, mirror);\n                    _this.context.moveTo(rotated_recorded.x, rotated_recorded.y);\n                    _this.context.lineTo(rotated_to.x, rotated_to.y);\n                });\n            });\n        }\n        this._recorded_to = to;\n        this.context.stroke();\n        return true;\n    }\n    editing_stop(at) {\n        this._recorded_to = null;\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/mandala.ts?");

/***/ }),

/***/ "./src/ts/on_select_tool.ts":
/*!**********************************!*\
  !*** ./src/ts/on_select_tool.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnSelectTool: () => (/* binding */ OnSelectTool)\n/* harmony export */ });\n/* harmony import */ var _editing_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editing_tool */ \"./src/ts/editing_tool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\n\n\nclass OnSelectTool extends _editing_tool__WEBPACK_IMPORTED_MODULE_0__.EditingTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, tmp_context);\n        this.select = this.select.bind(this);\n    }\n    select() {\n        this.context.clearRect(0, 0, this.w, this.h);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.editor.app.staging_context, this.editor.app.art_canvas);\n        this.select_action();\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.art_context, this.app.staging_canvas);\n        this.editor.undo_redo_buffer.push(this.app.art_context.getImageData(0, 0, this.w, this.h));\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.art_canvas);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.staging_context, this.app.tool_canvas, true);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.override_canvas_context)(this.app.view_context, this.app.staging_canvas);\n        if (this.editor.previous_tool_name) {\n            this.app.select_tool(this.editor.previous_tool_name);\n        }\n    }\n    hover() {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/on_select_tool.ts?");

/***/ }),

/***/ "./src/ts/rect.ts":
/*!************************!*\
  !*** ./src/ts/rect.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RectTool: () => (/* binding */ RectTool)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nclass RectTool extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor) {\n        super(context, editor, false);\n    }\n    editing_action(to) {\n        if (!this.from) {\n            return false;\n        }\n        this.context.rect(this.from.x, this.from.y, to.x - this.from.x, to.y - this.from.y);\n        if (this.app.settings.filled) {\n            this.context.fill();\n        }\n        else {\n            this.context.stroke();\n        }\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/rect.ts?");

/***/ }),

/***/ "./src/ts/scribble.ts":
/*!****************************!*\
  !*** ./src/ts/scribble.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScribbleTool: () => (/* binding */ ScribbleTool)\n/* harmony export */ });\n/* harmony import */ var _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click_and_drag_tool */ \"./src/ts/click_and_drag_tool.ts\");\n\nclass ScribbleTool extends _click_and_drag_tool__WEBPACK_IMPORTED_MODULE_0__.ClickAndDragTool {\n    constructor(context, editor, tmp_context) {\n        super(context, editor, true, tmp_context);\n    }\n    hover_action(at) {\n        if (!this.tmp_context) {\n            return false;\n        }\n        this.tmp_context.fillStyle = this.app.settings.fore_color;\n        this.tmp_context.beginPath();\n        const r = this.app.settings.line_width / 2;\n        this.tmp_context.ellipse(at.x, at.y, r, r, 0, 0, Math.PI * 2);\n        this.tmp_context.fill();\n        return true;\n    }\n    editing_action(to) {\n        if (this._recorded_to) {\n            this.context.moveTo(this._recorded_to.x, this._recorded_to.y);\n            this.context.lineTo(to.x, to.y);\n        }\n        this._recorded_to = to;\n        this.context.stroke();\n        return true;\n    }\n    editing_stop(at) {\n        this._recorded_to = null;\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/scribble.ts?");

/***/ }),

/***/ "./src/ts/styletogglers.ts":
/*!*********************************!*\
  !*** ./src/ts/styletogglers.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FillStyleToggler: () => (/* binding */ FillStyleToggler)\n/* harmony export */ });\n/* harmony import */ var _on_select_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./on_select_tool */ \"./src/ts/on_select_tool.ts\");\n\nfunction _equal_colors(c1, c2) {\n    return c1[0] == c2[0] &&\n        c1[1] == c2[1] &&\n        c1[2] == c2[2];\n}\nclass FillStyleToggler extends _on_select_tool__WEBPACK_IMPORTED_MODULE_0__.OnSelectTool {\n    start(at, buttons) {\n        throw new Error(\"Method not implemented.\");\n    }\n    action(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stop(at) {\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor(context, editor) {\n        super(context, editor);\n        this.context = context;\n        this.editor = editor;\n        this.app = editor.app;\n    }\n    select_action() {\n        this.app.settings.filled = !this.app.settings.filled;\n        const styled_buttons = document.getElementsByClassName('fillable');\n        for (let j = 0; j < styled_buttons.length; ++j) {\n            styled_buttons[j].classList.toggle('filled');\n        }\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/styletogglers.ts?");

/***/ }),

/***/ "./src/ts/undo_redo_buffer.ts":
/*!************************************!*\
  !*** ./src/ts/undo_redo_buffer.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UndoRedoBuffer: () => (/* binding */ UndoRedoBuffer)\n/* harmony export */ });\n/*\nCOMPLETELY EMPTY STACK WITH LINE DRWN:\n\n\n-1|\n ^\n\nnext_index: INDEX: -1\nON SCREEN: A\nUNDO: NULL\nREDO: NULL\n\nONLY BLANK CANVAS:\n\nSECOND LINE DRAWN:\n\nA\n^\n\nnext_index: INDEX 0\nON SCREEN: B\nUNDO: -1\nREDO: NONE\nUNDO = next_index - 2\n\nBLANK CANVAS + FIRST LINE + SECOND LINE:\n\n0123\nXAB\n US^\n\nnext_index: INDEX 3\nON SCREEN: B (INDEX 2)\nUNDO: INDEX 1\nREDO: NONE\nUNDO = next_index - 2\n\nBLANK CANVAS + FIRST LINE + SECOND LINE + UNDO:\n\n0123\nXAB\nUS^\n\nnext_index: INDEX 2\nON SCREEN: A (INDEX 1)\nUNDO: INDEX 0\nREDO: INDEX 2\nUNDO = next_index - 2\nREDO = next_index\n\n01\nXA\n^R\n\nXAB\n ^|\n\n...\n...\nXABCDEF\n    U^|\n\nABCDEF\n  USR\n\n\n*/\nclass UndoRedoBuffer {\n    constructor(size, log_level) {\n        this.stack = new Array(size);\n        this.next_index = 0;\n        this.high_water_mark = 0; // abuse of notation, h.w.m. of \"next\" actually\n        //, ${v.data[0]}, ${v.data[1]}, ${v.data[2]}`)\n    }\n    dump_to_canvas() {\n        // if (!this._log_level) {\n        //     return\n        // }\n        // const canvas = document.getElementById('dbg-canvas');\n        // const context = canvas.getContext('2d');\n        // context.fillStyle = 'rgb(128,128,128)';\n        // context.fillRect(0,0,800,80)\n        // for (let j = 0; j < this.high_water_mark; ++j) {\n        //     const v = this.stack[j];\n        //     if (v && v.data) {\n        //         context.putImageData(v, j*82,0)\n        //     } else if (v){\n        //         context.fillStyle = 'rgb(255,128,128)';\n        //         context.fillRect(j*82,0,80,80)\n        //     } else {\n        //         context.fillStyle = 'rgb(128,255,128)';\n        //         context.fillRect(j*82,0,80,80)\n        //     }\n        // }\n        // context.fillStyle = 'rgb(255,0,0)';\n        // context.fillRect(this.next_index*82+20,60,5,10)\n        // context.fillStyle = 'rgb(0,0,255)';\n        // context.fillRect(this.high_water_mark*82+20,70,5,10)\n    }\n    log(msg) {\n        console.log(msg);\n        // if (this._log_level) {\n        //     console.log(msg)\n        //     try {\n        //         document.getElementById('dbg').style.visibility = 50\n        //         document.getElementById('dbg').style.visibility = 'visible'\n        //         document.getElementById('dbg').innerHTML = msg\n        //     } catch {\n        //     }\n        // }\n    }\n    undo() {\n        if (this.next_index <= 1) {\n            if (this.next_index == 1) {\n                this.next_index--;\n            }\n            this.dump_to_canvas();\n            return null;\n        }\n        const v = this.stack[this.next_index - 2] || null;\n        this.next_index--;\n        this.dump_to_canvas();\n        return v;\n    }\n    redo() {\n        if (this.next_index >= this.high_water_mark) {\n            this.dump_to_canvas();\n            return null;\n        }\n        const v = this.stack[this.next_index] || null;\n        this.next_index++;\n        this.dump_to_canvas();\n        return v;\n    }\n    push(v) {\n        this.stack[this.next_index] = v;\n        this.next_index++;\n        if (this.next_index > this.high_water_mark) {\n            this.high_water_mark = this.next_index;\n        }\n        if (this.high_water_mark > this.stack.length) {\n            this.stack.length = this.stack.length * 2;\n        }\n        this.dump_to_canvas();\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/undo_redo_buffer.ts?");

/***/ }),

/***/ "./src/ts/utils.ts":
/*!*************************!*\
  !*** ./src/ts/utils.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   override_canvas_context: () => (/* binding */ override_canvas_context),\n/* harmony export */   parse_RGBA: () => (/* binding */ parse_RGBA)\n/* harmony export */ });\nfunction override_canvas_context(context_to, canvas_from, keep, avoid_native) {\n    // context_to.putImage(context_to_image_data,0,0);\n    const w = canvas_from.width;\n    const h = canvas_from.height;\n    if (!keep) {\n        context_to.clearRect(0, 0, w, h);\n    }\n    if (!avoid_native) {\n        context_to.drawImage(canvas_from, 0, 0);\n    }\n    else {\n        const context_from = canvas_from.getContext('2d');\n        const context_from_image_data = context_from.getImageData(0, 0, w, h);\n        const context_from_data = context_from_image_data.data;\n        const context_to_image_data = context_to.getImageData(0, 0, w, h);\n        const context_to_data = context_to_image_data.data;\n        for (let y = 0; y < h; ++y) {\n            for (let x = 0; x < w; ++x) {\n                const offset = (w * y + x) * 4;\n                if (context_from_data[offset + 3] > 0) {\n                    context_to_data[offset + 0] = context_from_data[offset + 0];\n                    context_to_data[offset + 1] = context_from_data[offset + 1];\n                    context_to_data[offset + 2] = context_from_data[offset + 2];\n                    context_to_data[offset + 3] = 255;\n                }\n            }\n        }\n        context_to.putImageData(context_to_image_data, 0, 0);\n    }\n}\nfunction parse_RGBA(color) {\n    if (color instanceof Uint8ClampedArray) {\n        return color;\n    }\n    // Match the pattern for \"rgb(r, g, b)\"\n    let regex = /rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)/;\n    // Execute the regex on the input string\n    let result = regex.exec(color);\n    if (result) {\n        // Return the extracted r, g, b values as an array of numbers\n        let r = parseInt(result[1]);\n        let g = parseInt(result[2]);\n        let b = parseInt(result[3]);\n        let a = parseInt(result[4]);\n        return Uint8ClampedArray.from([r, g, b, a]);\n    }\n    else {\n        throw new Error(\"Invalid rgb string format\");\n    }\n}\n\n\n//# sourceURL=webpack://scrib/./src/ts/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/ts/main_app.ts");
/******/ 	
/******/ })()
;